class AboutAdminPanel {
    constructor() {
        this.aboutData = null;
        this.init();
    }

    async init() {
        await this.loadData();
        this.renderAboutForm();
        this.renderPreview();
        this.bindEvents();
    }

    async loadData() {
        try {
            const timestamp = Date.now();
            const response = await fetch(`../data/about-data.json?v=${timestamp}&_cache=no`, {
                method: 'GET',
                headers: {
                    'Cache-Control': 'no-cache, no-store, must-revalidate',
                    'Pragma': 'no-cache',
                    'Expires': '0'
                },
                cache: 'no-cache',
                mode: 'cors',
                credentials: 'same-origin'
            });

            if (!response.ok) {
                throw new Error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: ${response.status}`);
            }
            this.aboutData = await response.json();
            console.log('üì° –î–∞–Ω–Ω—ã–µ About —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã —Å —Å–µ—Ä–≤–µ—Ä–∞');
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö About:', error);

            // –ï—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ localStorage
            const localData = localStorage.getItem('aboutData');
            if (localData) {
                this.aboutData = JSON.parse(localData);
                console.log('‚ö†Ô∏è –î–∞–Ω–Ω—ã–µ About –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ localStorage');
                this.showMessage('–î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ –∫—ç—à–∞ (—Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω)', 'warning');
                return;
            }

            // –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            this.showMessage('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö About', 'error');
            this.aboutData = this.getDefaultData();
        }
    }

    getDefaultData() {
        return {
            pageTitle: "About",
            hero: {
                backgroundImage: "about/images/image_002.webp",
                title: "About"
            },
            mainSection: {
                title: "Sushi Artistry Redefined",
                description: "Where culinary craftsmanship meets modern elegance. Indulge in the finest sushi, expertly curated to elevate your dining experience."
            },
            slider1: {
                images: [
                    "about/images/image_003.webp",
                    "about/images/image_004.webp",
                    "about/images/image_005.webp"
                ]
            },
            awards: {
                tripAdvisor: {
                    title: "Trip Advisor",
                    subtitle: "Best Sushi"
                },
                michelinGuide: {
                    title: "Michelin Guide",
                    subtitle: "Quality Food"
                },
                starDining: {
                    title: "Start Dining",
                    subtitle: "Cool vibe"
                }
            },
            slider2: {
                images: [
                    "about/images/image_008.webp",
                    "about/images/image_009.webp",
                    "about/images/image_010.webp"
                ]
            },
            ourStory: {
                title: "Our Story",
                description: "Founded with a passion for culinary excellence, Qitchen's journey began in the heart of Prague. Over years, it evolved into a haven for sushi enthusiasts, celebrated for its artful mastery and devotion to redefining gastronomy."
            },
            header: {
                logo: "about/images/image_001.webp"
            },
            backgroundImage: "about/images/image_013.jpg"
        };
    }

    renderAboutForm() {
        const container = document.getElementById('aboutFormContainer');
        if (!container) return;

        container.innerHTML = `
            <div class="card">
                <div class="card-header">
                    <h2>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã About</h2>
                    <p>–ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã "–û –Ω–∞—Å"</p>
                </div>

                <div class="card-body">
                    <!-- –ì–µ—Ä–æ–π —Å–µ–∫—Ü–∏—è -->
                    <div class="form-section">
                        <h3>–ì–ª–∞–≤–Ω–∞—è —Å–µ–∫—Ü–∏—è (Hero)</h3>
                        <div class="form-group">
                            <label for="heroTitle">–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:</label>
                            <input type="text" id="heroTitle" value="${this.aboutData.hero.title}" class="form-control">
                        </div>
                        <div class="form-group">
                            <label for="heroBackground">–§–æ–Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:</label>
                            <input type="url" id="heroBackground" value="${this.aboutData.hero.backgroundImage}"
                                   class="form-control" placeholder="–í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ">
                        </div>
                    </div>

                    <!-- –û—Å–Ω–æ–≤–Ω–∞—è —Å–µ–∫—Ü–∏—è -->
                    <div class="form-section">
                        <h3>–û—Å–Ω–æ–≤–Ω–∞—è —Å–µ–∫—Ü–∏—è</h3>
                        <div class="form-group">
                            <label for="mainTitle">–ì–ª–∞–≤–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫:</label>
                            <input type="text" id="mainTitle" value="${this.aboutData.mainSection.title}" class="form-control">
                        </div>
                        <div class="form-group">
                            <label for="mainDescription">–û–ø–∏—Å–∞–Ω–∏–µ:</label>
                            <textarea id="mainDescription" class="form-control" rows="3">${this.aboutData.mainSection.description}</textarea>
                        </div>
                    </div>

                    <!-- –ü–µ—Ä–≤—ã–π —Å–ª–∞–π–¥–µ—Ä -->
                    <div class="form-section">
                        <h3>–ü–µ—Ä–≤—ã–π —Å–ª–∞–π–¥–µ—Ä (3 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è)</h3>
                        <div class="form-group">
                            <label for="slider1Image1">–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ 1:</label>
                            <input type="url" id="slider1Image1" value="${this.aboutData.slider1.images[0]}"
                                   class="form-control" placeholder="–í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ">
                        </div>
                        <div class="form-group">
                            <label for="slider1Image2">–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ 2:</label>
                            <input type="url" id="slider1Image2" value="${this.aboutData.slider1.images[1]}"
                                   class="form-control" placeholder="–í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ">
                        </div>
                        <div class="form-group">
                            <label for="slider1Image3">–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ 3:</label>
                            <input type="url" id="slider1Image3" value="${this.aboutData.slider1.images[2]}"
                                   class="form-control" placeholder="–í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ">
                        </div>
                    </div>

                    <!-- –ù–∞–≥—Ä–∞–¥—ã -->
                    <div class="form-section">
                        <h3>–ù–∞–≥—Ä–∞–¥—ã –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è</h3>
                        <div class="awards-grid">
                            <div class="award-item">
                                <h4>Trip Advisor</h4>
                                <div class="form-group">
                                    <label for="tripAdvisorTitle">–ó–∞–≥–æ–ª–æ–≤–æ–∫:</label>
                                    <input type="text" id="tripAdvisorTitle" value="${this.aboutData.awards.tripAdvisor.title}" class="form-control">
                                </div>
                                <div class="form-group">
                                    <label for="tripAdvisorSubtitle">–ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫:</label>
                                    <input type="text" id="tripAdvisorSubtitle" value="${this.aboutData.awards.tripAdvisor.subtitle}" class="form-control">
                                </div>
                            </div>
                            <div class="award-item">
                                <h4>Michelin Guide</h4>
                                <div class="form-group">
                                    <label for="michelinTitle">–ó–∞–≥–æ–ª–æ–≤–æ–∫:</label>
                                    <input type="text" id="michelinTitle" value="${this.aboutData.awards.michelinGuide.title}" class="form-control">
                                </div>
                                <div class="form-group">
                                    <label for="michelinSubtitle">–ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫:</label>
                                    <input type="text" id="michelinSubtitle" value="${this.aboutData.awards.michelinGuide.subtitle}" class="form-control">
                                </div>
                            </div>
                            <div class="award-item">
                                <h4>Star Dining</h4>
                                <div class="form-group">
                                    <label for="starDiningTitle">–ó–∞–≥–æ–ª–æ–≤–æ–∫:</label>
                                    <input type="text" id="starDiningTitle" value="${this.aboutData.awards.starDining.title}" class="form-control">
                                </div>
                                <div class="form-group">
                                    <label for="starDiningSubtitle">–ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫:</label>
                                    <input type="text" id="starDiningSubtitle" value="${this.aboutData.awards.starDining.subtitle}" class="form-control">
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- –í—Ç–æ—Ä–æ–π —Å–ª–∞–π–¥–µ—Ä -->
                    <div class="form-section">
                        <h3>–í—Ç–æ—Ä–æ–π —Å–ª–∞–π–¥–µ—Ä (3 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è)</h3>
                        <div class="form-group">
                            <label for="slider2Image1">–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ 1:</label>
                            <input type="url" id="slider2Image1" value="${this.aboutData.slider2.images[0]}"
                                   class="form-control" placeholder="–í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ">
                        </div>
                        <div class="form-group">
                            <label for="slider2Image2">–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ 2:</label>
                            <input type="url" id="slider2Image2" value="${this.aboutData.slider2.images[1]}"
                                   class="form-control" placeholder="–í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ">
                        </div>
                        <div class="form-group">
                            <label for="slider2Image3">–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ 3:</label>
                            <input type="url" id="slider2Image3" value="${this.aboutData.slider2.images[2]}"
                                   class="form-control" placeholder="–í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ">
                        </div>
                    </div>

                    <!-- –ù–∞—à–∞ –∏—Å—Ç–æ—Ä–∏—è -->
                    <div class="form-section">
                        <h3>–ù–∞—à–∞ –∏—Å—Ç–æ—Ä–∏—è</h3>
                        <div class="form-group">
                            <label for="storyTitle">–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏:</label>
                            <input type="text" id="storyTitle" value="${this.aboutData.ourStory.title}" class="form-control">
                        </div>
                        <div class="form-group">
                            <label for="storyDescription">–¢–µ–∫—Å—Ç –∏—Å—Ç–æ—Ä–∏–∏:</label>
                            <textarea id="storyDescription" class="form-control" rows="4">${this.aboutData.ourStory.description}</textarea>
                        </div>
                    </div>

                    <!-- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã -->
                    <div class="form-section">
                        <h3>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã</h3>
                        <div class="form-group">
                            <label for="headerLogo">–õ–æ–≥–æ—Ç–∏–ø –≤ —Ö–µ–¥–µ—Ä–µ:</label>
                            <input type="url" id="headerLogo" value="${this.aboutData.header.logo}"
                                   class="form-control" placeholder="–í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ª–æ–≥–æ—Ç–∏–ø">
                        </div>
                        <div class="form-group">
                            <label for="pageBackground">–§–æ–Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:</label>
                            <input type="url" id="pageBackground" value="${this.aboutData.backgroundImage}"
                                   class="form-control" placeholder="–í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–æ–Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ">
                        </div>
                    </div>
                </div>
            </div>
        `;
    }

    renderPreview() {
        const container = document.getElementById('previewContent');
        if (!container) return;

        container.innerHTML = `
            <div class="about-preview">
                <h3>–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã About</h3>

                <div class="preview-section">
                    <h4>–ì–µ—Ä–æ–π —Å–µ–∫—Ü–∏—è</h4>
                    <div class="preview-hero" style="background-image: url('${this.aboutData.hero.backgroundImage}')">
                        <h1>${this.aboutData.hero.title}</h1>
                    </div>
                </div>

                <div class="preview-section">
                    <h4>–û—Å–Ω–æ–≤–Ω–∞—è —Å–µ–∫—Ü–∏—è</h4>
                    <h2>${this.aboutData.mainSection.title}</h2>
                    <p>${this.aboutData.mainSection.description}</p>
                </div>

                <div class="preview-section">
                    <h4>–ü–µ—Ä–≤—ã–π —Å–ª–∞–π–¥–µ—Ä</h4>
                    <div class="preview-slider">
                        ${this.aboutData.slider1.images.map(img => `<img src="${img}" alt="Slider image" class="preview-img">`).join('')}
                    </div>
                </div>

                <div class="preview-section">
                    <h4>–ù–∞–≥—Ä–∞–¥—ã</h4>
                    <div class="preview-awards">
                        <div class="award">${this.aboutData.awards.tripAdvisor.title} - ${this.aboutData.awards.tripAdvisor.subtitle}</div>
                        <div class="award">${this.aboutData.awards.michelinGuide.title} - ${this.aboutData.awards.michelinGuide.subtitle}</div>
                        <div class="award">${this.aboutData.awards.starDining.title} - ${this.aboutData.awards.starDining.subtitle}</div>
                    </div>
                </div>

                <div class="preview-section">
                    <h4>–í—Ç–æ—Ä–æ–π —Å–ª–∞–π–¥–µ—Ä</h4>
                    <div class="preview-slider">
                        ${this.aboutData.slider2.images.map(img => `<img src="${img}" alt="Slider image" class="preview-img">`).join('')}
                    </div>
                </div>

                <div class="preview-section">
                    <h4>–ù–∞—à–∞ –∏—Å—Ç–æ—Ä–∏—è</h4>
                    <h3>${this.aboutData.ourStory.title}</h3>
                    <p>${this.aboutData.ourStory.description}</p>
                </div>
            </div>
        `;
    }

    bindEvents() {
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≤—Å–µ—Ö –∏–Ω–ø—É—Ç–æ–≤
        const inputs = [
            'heroTitle', 'heroBackground', 'mainTitle', 'mainDescription',
            'slider1Image1', 'slider1Image2', 'slider1Image3',
            'tripAdvisorTitle', 'tripAdvisorSubtitle',
            'michelinTitle', 'michelinSubtitle',
            'starDiningTitle', 'starDiningSubtitle',
            'slider2Image1', 'slider2Image2', 'slider2Image3',
            'storyTitle', 'storyDescription', 'headerLogo', 'pageBackground'
        ];

        inputs.forEach(inputId => {
            const element = document.getElementById(inputId);
            if (element) {
                element.addEventListener('input', () => {
                    this.updateData();
                    this.renderPreview();
                });
            }
        });
    }

    updateData() {
        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–æ—Ä–º—ã
        this.aboutData.hero.title = document.getElementById('heroTitle')?.value || '';
        this.aboutData.hero.backgroundImage = document.getElementById('heroBackground')?.value || '';
        this.aboutData.mainSection.title = document.getElementById('mainTitle')?.value || '';
        this.aboutData.mainSection.description = document.getElementById('mainDescription')?.value || '';

        this.aboutData.slider1.images[0] = document.getElementById('slider1Image1')?.value || '';
        this.aboutData.slider1.images[1] = document.getElementById('slider1Image2')?.value || '';
        this.aboutData.slider1.images[2] = document.getElementById('slider1Image3')?.value || '';

        this.aboutData.awards.tripAdvisor.title = document.getElementById('tripAdvisorTitle')?.value || '';
        this.aboutData.awards.tripAdvisor.subtitle = document.getElementById('tripAdvisorSubtitle')?.value || '';
        this.aboutData.awards.michelinGuide.title = document.getElementById('michelinTitle')?.value || '';
        this.aboutData.awards.michelinGuide.subtitle = document.getElementById('michelinSubtitle')?.value || '';
        this.aboutData.awards.starDining.title = document.getElementById('starDiningTitle')?.value || '';
        this.aboutData.awards.starDining.subtitle = document.getElementById('starDiningSubtitle')?.value || '';

        this.aboutData.slider2.images[0] = document.getElementById('slider2Image1')?.value || '';
        this.aboutData.slider2.images[1] = document.getElementById('slider2Image2')?.value || '';
        this.aboutData.slider2.images[2] = document.getElementById('slider2Image3')?.value || '';

        this.aboutData.ourStory.title = document.getElementById('storyTitle')?.value || '';
        this.aboutData.ourStory.description = document.getElementById('storyDescription')?.value || '';
        this.aboutData.header.logo = document.getElementById('headerLogo')?.value || '';
        this.aboutData.backgroundImage = document.getElementById('pageBackground')?.value || '';
    }

    async saveData() {
        try {
            // –í–ê–ñ–ù–û: –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–æ—Ä–º—ã –ø–µ—Ä–µ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º
            this.updateData();

            const saveBtn = document.getElementById('saveBtn');
            saveBtn.textContent = '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...';
            saveBtn.disabled = true;

            let serverSaved = false;
            let errorMessage = '';

            // –ü—ã—Ç–∞–µ–º—Å—è —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
            try {
                const response = await fetch('save-about-data.php', {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                        'Cache-Control': 'no-cache',
                        'Connection': 'close'
                    },
                    body: JSON.stringify(this.aboutData, null, 2),
                    cache: 'no-cache',
                    mode: 'cors',
                    credentials: 'same-origin'
                });

                if (response.ok) {
                    const result = await response.json();
                    serverSaved = true;
                    console.log('‚úÖ –î–∞–Ω–Ω—ã–µ About —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:', result);
                } else {
                    const errorData = await response.text();
                    errorMessage = `–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: ${response.status}`;
                    console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è About –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:', errorData);
                }
            } catch (error) {
                errorMessage = '–°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º';
                console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ About:', error);

                // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —Å POST –º–µ—Ç–æ–¥–æ–º
                try {
                    console.log('üîÑ –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å About —Å POST...');
                    const retryResponse = await fetch('save-about-data.php', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(this.aboutData, null, 2)
                    });

                    if (retryResponse.ok) {
                        const result = await retryResponse.json();
                        serverSaved = true;
                        console.log('‚úÖ –î–∞–Ω–Ω—ã–µ About —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ (–ø–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞):', result);
                    }
                } catch (retryError) {
                    console.log('‚ùå –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ About –Ω–µ —É–¥–∞–ª–∞—Å—å:', retryError);
                }
            }

            if (serverSaved) {
                localStorage.setItem('aboutData', JSON.stringify(this.aboutData));
                this.updateAboutPage();
                this.showMessage('‚úÖ –î–∞–Ω–Ω—ã–µ About —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!', 'success');
            } else {
                localStorage.setItem('aboutData', JSON.stringify(this.aboutData));
                this.updateAboutPage();
                this.downloadJSON();
                this.showMessage(`‚ö†Ô∏è ${errorMessage}. –î–∞–Ω–Ω—ã–µ About —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –ª–æ–∫–∞–ª—å–Ω–æ –∏ —Ñ–∞–π–ª —Å–∫–∞—á–∞–Ω.`, 'warning');
            }

        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è About:', error);
            localStorage.setItem('aboutData', JSON.stringify(this.aboutData));
            this.updateAboutPage();
            this.downloadJSON();
            this.showMessage('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è. –î–∞–Ω–Ω—ã–µ About —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –ª–æ–∫–∞–ª—å–Ω–æ.', 'error');
        } finally {
            const saveBtn = document.getElementById('saveBtn');
            saveBtn.textContent = '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è';
            saveBtn.disabled = false;
        }
    }

    updateAboutPage() {
        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage —Å –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ—Ç–∫–æ–π
        const dataWithTimestamp = {
            ...this.aboutData,
            _lastUpdate: Date.now()
        };
        localStorage.setItem('aboutData', JSON.stringify(dataWithTimestamp));

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è About —Å—Ç—Ä–∞–Ω–∏—Ü—ã (–¥–ª—è –Ω–æ–≤—ã—Ö –æ–∫–æ–Ω)
        if (window.opener && !window.opener.closed) {
            window.opener.postMessage({
                type: 'aboutDataUpdate',
                data: this.aboutData,
                timestamp: Date.now()
            }, '*');
        }

        // –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –∏ –æ–±–Ω–æ–≤–∏—Ç—å –≤—Å–µ –æ—Ç–∫—Ä—ã—Ç—ã–µ –≤–∫–ª–∞–¥–∫–∏ —Å about —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π
        try {
            // –°–æ–∑–¥–∞–µ–º –∫–∞—Å—Ç–æ–º–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            const updateEvent = new CustomEvent('aboutDataForceUpdate', {
                detail: { data: this.aboutData, timestamp: Date.now() }
            });
            window.dispatchEvent(updateEvent);
        } catch (error) {
            console.log('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è:', error);
        }

        // –¢–∞–∫–∂–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage –¥–ª—è –¥—Ä—É–≥–∏—Ö –≤–∫–ª–∞–¥–æ–∫ (–ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ)
        window.dispatchEvent(new StorageEvent('storage', {
            key: 'aboutData',
            newValue: JSON.stringify(this.aboutData),
            oldValue: null
        }));

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —à–∏—Ä–æ–∫–æ–≤–µ—â–∞—Ç–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ BroadcastChannel (–µ—Å–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è)
        try {
            if (typeof BroadcastChannel !== 'undefined') {
                const channel = new BroadcastChannel('aboutUpdates');
                channel.postMessage({
                    type: 'aboutDataUpdate',
                    data: this.aboutData,
                    timestamp: Date.now()
                });
                channel.close();
            }
        } catch (error) {
            console.log('BroadcastChannel –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è:', error);
        }

        console.log('üîÑ –î–∞–Ω–Ω—ã–µ About –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É (–≤—Å–µ –º–µ—Ç–æ–¥—ã)');
    }

    downloadJSON() {
        const dataStr = JSON.stringify(this.aboutData, null, 2);
        const dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);
        const exportFileDefaultName = 'about-data.json';

        const linkElement = document.createElement('a');
        linkElement.setAttribute('href', dataUri);
        linkElement.setAttribute('download', exportFileDefaultName);
        linkElement.click();

        console.log('üìÅ –§–∞–π–ª about-data.json —Å–∫–∞—á–∞–Ω');
    }

    showMessage(text, type) {
        const messageElement = document.getElementById('statusMessage');
        if (messageElement) {
            messageElement.textContent = text;
            messageElement.className = `status-message ${type}`;

            setTimeout(() => {
                messageElement.classList.add('show');
            }, 100);

            setTimeout(() => {
                messageElement.classList.remove('show');
            }, 5000);
        }
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞—Å—Å –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –≥–ª–∞–≤–Ω–æ–π –∞–¥–º–∏–Ω–∫–µ
window.AboutAdminPanel = AboutAdminPanel;
