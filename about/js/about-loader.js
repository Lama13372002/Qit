class AboutPageLoader {
    constructor() {
        this.aboutData = null;
        this.isInitialized = false;
        this.init();
    }

    async init() {
        // –°–∫—Ä—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –¥–æ –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
        this.hideContentDuringLoad();

        await this.loadData();
        this.applyDataToPage();
        this.setupEventListeners();

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –ø–æ—Å–ª–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
        this.showContentAfterLoad();
        this.isInitialized = true;
    }

    hideContentDuringLoad() {
        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª—å –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤–æ –≤—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏
        const style = document.createElement('style');
        style.id = 'about-loader-style';
        style.textContent = `
            .framer-wgljk8, .framer-keww5a, .framer-a8lbq2,
            .framer-ceobpu-container, .framer-roab4s-container,
            .framer-y5apty, .framer-mhqezx, .framer-q365y8,
            .framer-1qos90t, .framer-11fnxlo, .framer-1isk8ah,
            .framer-ggpte5, .framer-1g49ivy {
                opacity: 0 !important;
                transition: opacity 0.3s ease !important;
            }
        `;
        document.head.appendChild(style);
    }

    showContentAfterLoad() {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —Å –ø–ª–∞–≤–Ω–æ–π –∞–Ω–∏–º–∞—Ü–∏–µ–π
        const style = document.getElementById('about-loader-style');
        if (style) {
            style.textContent = `
                .framer-wgljk8, .framer-keww5a, .framer-a8lbq2,
                .framer-ceobpu-container, .framer-roab4s-container,
                .framer-y5apty, .framer-mhqezx, .framer-q365y8,
                .framer-1qos90t, .framer-11fnxlo, .framer-1isk8ah,
                .framer-ggpte5, .framer-1g49ivy {
                    opacity: 1 !important;
                    transition: opacity 0.3s ease !important;
                }
            `;

            // –£–¥–∞–ª—è–µ–º —Å—Ç–∏–ª—å —á–µ—Ä–µ–∑ —Å–µ–∫—É–Ω–¥—É
            setTimeout(() => {
                if (style.parentNode) {
                    style.parentNode.removeChild(style);
                }
            }, 1000);
        }
    }

    async loadData() {
        try {
            // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å —Å–µ—Ä–≤–µ—Ä–∞ —Å –±–æ–ª–µ–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–º–∏ –∞–Ω—Ç–∏-–∫—ç—à –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
            const timestamp = Date.now();
            const randomParam = Math.random().toString(36).substring(7);
            const response = await fetch(`../data/about-data.json?v=${timestamp}&r=${randomParam}&_=${Date.now()}`, {
                method: 'GET',
                headers: {
                    'Cache-Control': 'no-cache, no-store, must-revalidate, max-age=0',
                    'Pragma': 'no-cache',
                    'Expires': '0',
                    'If-Modified-Since': 'Thu, 01 Jan 1970 00:00:00 GMT'
                },
                cache: 'no-cache'
            });

            if (response.ok) {
                const newData = await response.json();
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª–∏—Å—å –ª–∏ –¥–∞–Ω–Ω—ã–µ
                if (JSON.stringify(this.aboutData) !== JSON.stringify(newData)) {
                    this.aboutData = newData;
                    console.log('üì° –î–∞–Ω–Ω—ã–µ About –∑–∞–≥—Ä—É–∂–µ–Ω—ã —Å —Å–µ—Ä–≤–µ—Ä–∞ (–æ–±–Ω–æ–≤–ª–µ–Ω—ã)');
                } else {
                    this.aboutData = newData;
                    console.log('üì° –î–∞–Ω–Ω—ã–µ About –∑–∞–≥—Ä—É–∂–µ–Ω—ã —Å —Å–µ—Ä–≤–µ—Ä–∞');
                }
                return;
            }
        } catch (error) {
            console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å —Å–µ—Ä–≤–µ—Ä–∞:', error);
        }

        // –ï—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ localStorage
        const localData = localStorage.getItem('aboutData');
        if (localData) {
            this.aboutData = JSON.parse(localData);
            console.log('üì± –î–∞–Ω–Ω—ã–µ About –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ localStorage');
            return;
        }

        console.log('‚ÑπÔ∏è –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ About');
        // –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ—Ç, –¥–∞–Ω–Ω—ã–µ –æ—Å—Ç–∞—é—Ç—Å—è –∫–∞–∫ –µ—Å—Ç—å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    }

    applyDataToPage() {
        if (!this.aboutData) return;

        try {
            // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            this.updatePageTitle();

            // –û–±–Ω–æ–≤–ª—è–µ–º hero —Å–µ–∫—Ü–∏—é
            this.updateHeroSection();

            // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Å–µ–∫—Ü–∏—é
            this.updateMainSection();

            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ª–∞–π–¥–µ—Ä—ã
            this.updateSliders();

            // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞–≥—Ä–∞–¥—ã
            this.updateAwards();

            // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—à—É –∏—Å—Ç–æ—Ä–∏—é
            this.updateOurStory();

            // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–≥–æ—Ç–∏–ø
            this.updateLogo();

            // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–æ–Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            this.updateBackgroundImage();

            console.log('‚úÖ –î–∞–Ω–Ω—ã–µ About –ø—Ä–∏–º–µ–Ω–µ–Ω—ã –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ');
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö About:', error);
        }
    }

    updatePageTitle() {
        // –û–±–Ω–æ–≤–ª—è–µ–º title –¥–æ–∫—É–º–µ–Ω—Ç–∞
        if (this.aboutData.pageTitle) {
            document.title = `${this.aboutData.pageTitle} - Qitchen Restaurant`;
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–∞–≤–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ hero —Å–µ–∫—Ü–∏–∏
        const heroTitle = document.querySelector('.framer-wgljk8 h1');
        if (heroTitle && this.aboutData.hero?.title) {
            heroTitle.textContent = this.aboutData.hero.title;
        }
    }

    updateHeroSection() {
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–æ–Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ hero —Å–µ–∫—Ü–∏–∏
        const heroImage = document.querySelector('.framer-1avfphl img');
        if (heroImage && this.aboutData.hero?.backgroundImage) {
            heroImage.src = this.aboutData.hero.backgroundImage;
            heroImage.alt = this.aboutData.hero.title || 'About section background';
        }
    }

    updateMainSection() {
        // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ "Sushi Artistry Redefined"
        const mainTitle = document.querySelector('.framer-keww5a h2');
        if (mainTitle && this.aboutData.mainSection?.title) {
            mainTitle.innerHTML = this.aboutData.mainSection.title.replace(/\n/g, '<br class="framer-text"/>');
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ–¥ –∑–∞–≥–æ–ª–æ–≤–∫–æ–º
        const mainDescription = document.querySelector('.framer-a8lbq2 p');
        if (mainDescription && this.aboutData.mainSection?.description) {
            mainDescription.textContent = this.aboutData.mainSection.description;
        }
    }

    updateSliders() {
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø–µ—Ä–≤—ã–π —Å–ª–∞–π–¥–µ—Ä
        if (this.aboutData.slider1?.images) {
            const slider1Images = document.querySelectorAll('.framer-ceobpu-container img');
            this.aboutData.slider1.images.forEach((imageSrc, index) => {
                if (slider1Images[index] && imageSrc) {
                    slider1Images[index].src = imageSrc;
                    slider1Images[index].alt = `Slider image ${index + 1}`;
                }
            });
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ç–æ—Ä–æ–π —Å–ª–∞–π–¥–µ—Ä
        if (this.aboutData.slider2?.images) {
            const slider2Images = document.querySelectorAll('.framer-roab4s-container img');
            this.aboutData.slider2.images.forEach((imageSrc, index) => {
                if (slider2Images[index] && imageSrc) {
                    slider2Images[index].src = imageSrc;
                    slider2Images[index].alt = `Slider 2 image ${index + 1}`;
                }
            });
        }
    }

    updateAwards() {
        if (!this.aboutData.awards) return;

        // Trip Advisor
        const tripAdvisorTitle = document.querySelector('.framer-y5apty p');
        const tripAdvisorSubtitle = document.querySelector('.framer-mhqezx p');
        if (tripAdvisorTitle && this.aboutData.awards.tripAdvisor?.title) {
            tripAdvisorTitle.textContent = this.aboutData.awards.tripAdvisor.title;
        }
        if (tripAdvisorSubtitle && this.aboutData.awards.tripAdvisor?.subtitle) {
            tripAdvisorSubtitle.textContent = this.aboutData.awards.tripAdvisor.subtitle;
        }

        // Michelin Guide
        const michelinTitle = document.querySelector('.framer-q365y8 p');
        const michelinSubtitle = document.querySelector('.framer-1qos90t p');
        if (michelinTitle && this.aboutData.awards.michelinGuide?.title) {
            michelinTitle.textContent = this.aboutData.awards.michelinGuide.title;
        }
        if (michelinSubtitle && this.aboutData.awards.michelinGuide?.subtitle) {
            michelinSubtitle.textContent = this.aboutData.awards.michelinGuide.subtitle;
        }

        // Star Dining
        const starDiningTitle = document.querySelector('.framer-11fnxlo p');
        const starDiningSubtitle = document.querySelector('.framer-1isk8ah p');
        if (starDiningTitle && this.aboutData.awards.starDining?.title) {
            starDiningTitle.textContent = this.aboutData.awards.starDining.title;
        }
        if (starDiningSubtitle && this.aboutData.awards.starDining?.subtitle) {
            starDiningSubtitle.textContent = this.aboutData.awards.starDining.subtitle;
        }
    }

    updateOurStory() {
        // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ "Our Story"
        const storyTitle = document.querySelector('.framer-ggpte5 h4');
        if (storyTitle && this.aboutData.ourStory?.title) {
            storyTitle.textContent = this.aboutData.ourStory.title;
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∏—Å—Ç–æ—Ä–∏–∏
        const storyDescription = document.querySelector('.framer-1g49ivy p');
        if (storyDescription && this.aboutData.ourStory?.description) {
            storyDescription.textContent = this.aboutData.ourStory.description;
        }
    }

    updateLogo() {
        // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–≥–æ—Ç–∏–ø –≤ —Ö–µ–¥–µ—Ä–µ
        const headerLogo = document.querySelector('.framer-493dzc img');
        if (headerLogo && this.aboutData.header?.logo) {
            headerLogo.src = this.aboutData.header.logo;
            headerLogo.alt = 'Qitchen Restaurant Logo';
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–≥–æ—Ç–∏–ø –≤ –º–æ–±–∏–ª—å–Ω–æ–º –º–µ–Ω—é
        const mobileLogo = document.querySelector('.mobile-menu-logo');
        if (mobileLogo && this.aboutData.header?.logo) {
            mobileLogo.src = this.aboutData.header.logo;
            mobileLogo.alt = 'Qitchen Restaurant Logo';
        }
    }

    updateBackgroundImage() {
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–æ–Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        const backgroundImage = document.querySelector('.framer-xyw2qg-container img');
        if (backgroundImage && this.aboutData.backgroundImage) {
            backgroundImage.src = this.aboutData.backgroundImage;
            backgroundImage.alt = 'Page background';
        }
    }

    setupEventListeners() {
        // –°–ª—É—à–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏
        window.addEventListener('message', (event) => {
            if (event.data.type === 'aboutDataUpdate') {
                console.log('üîÑ –ü–æ–ª—É—á–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏');
                this.aboutData = event.data.data;
                localStorage.setItem('aboutData', JSON.stringify(this.aboutData)); // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π –∫—ç—à
                this.applyDataToPage();
                console.log('üîÑ –î–∞–Ω–Ω—ã–µ About –æ–±–Ω–æ–≤–ª–µ–Ω—ã —á–µ—Ä–µ–∑ postMessage');
            }
        });

        // –°–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ localStorage
        window.addEventListener('storage', (event) => {
            if (event.key === 'aboutData' && event.newValue) {
                console.log('üîÑ –ü–æ–ª—É—á–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ localStorage');
                this.aboutData = JSON.parse(event.newValue);
                this.applyDataToPage();
                console.log('üîÑ –î–∞–Ω–Ω—ã–µ About –æ–±–Ω–æ–≤–ª–µ–Ω—ã —á–µ—Ä–µ–∑ localStorage');
            }
        });

        // –°–ª—É—à–∞–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        window.addEventListener('aboutDataForceUpdate', (event) => {
            if (event.detail && event.detail.data) {
                console.log('üîÑ –ü–æ–ª—É—á–µ–Ω–æ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –∫–∞—Å—Ç–æ–º–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ');
                this.aboutData = event.detail.data;
                localStorage.setItem('aboutData', JSON.stringify(this.aboutData));
                this.applyDataToPage();

            }
        });

        // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É BroadcastChannel –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
        try {
            if (typeof BroadcastChannel !== 'undefined') {
                const channel = new BroadcastChannel('aboutUpdates');
                channel.addEventListener('message', (event) => {
                    if (event.data.type === 'aboutDataUpdate') {
                        console.log('üîÑ –ü–æ–ª—É—á–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ BroadcastChannel');
                        this.aboutData = event.data.data;
                        localStorage.setItem('aboutData', JSON.stringify(this.aboutData));
                        this.applyDataToPage();

                    }
                });

                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–Ω–∞–ª –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∑–∞–∫—Ä—ã—Ç–∏—è
                this.broadcastChannel = channel;
            }
        } catch (error) {
            console.log('BroadcastChannel –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤ —ç—Ç–æ–º –±—Ä–∞—É–∑–µ—Ä–µ:', error);
        }

        // –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π (–∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥)
        setInterval(async () => {
            await this.checkForUpdates();
        }, 30000);

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–∏ —Ñ–æ–∫—É—Å–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        window.addEventListener('focus', async () => {
            console.log('üîç –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–ª—É—á–∏–ª–∞ —Ñ–æ–∫—É—Å, –ø—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è');
            await this.checkForUpdates();
        });
    }

    showUpdateNotification() {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö
        const notification = document.createElement('div');
        notification.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            background: linear-gradient(135deg, rgb(34, 197, 94) 0%, rgb(22, 163, 74) 100%);
            color: white;
            padding: 12px 20px;
            border-radius: 8px;
            font-family: 'Inter', sans-serif;
            font-size: 14px;
            font-weight: 500;
            box-shadow: 0 4px 12px rgba(34, 197, 94, 0.3);
            z-index: 10000;
            transform: translateX(400px);
            transition: all 0.3s ease;
        `;
        notification.textContent = '‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ About –æ–±–Ω–æ–≤–ª–µ–Ω–∞!';

        document.body.appendChild(notification);

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º
        setTimeout(() => {
            notification.style.transform = 'translateX(0)';
        }, 100);

        // –£–±–∏—Ä–∞–µ–º —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
            notification.style.transform = 'translateX(400px)';
            setTimeout(() => {
                if (document.body.contains(notification)) {
                    document.body.removeChild(notification);
                }
            }, 300);
        }, 3000);
    }

    async checkForUpdates() {
        try {
            const timestamp = Date.now();
            const randomParam = Math.random().toString(36).substring(7);
            const response = await fetch(`../data/about-data.json?v=${timestamp}&r=${randomParam}`, {
                method: 'GET',
                headers: {
                    'Cache-Control': 'no-cache, no-store, must-revalidate, max-age=0',
                    'Pragma': 'no-cache',
                    'Expires': '0'
                },
                cache: 'no-cache'
            });

            if (response.ok) {
                const newData = await response.json();
                // –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å —Ç–µ–∫—É—â–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏
                if (JSON.stringify(this.aboutData) !== JSON.stringify(newData)) {
                    console.log('üîÑ –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ About');
                    this.aboutData = newData;
                    localStorage.setItem('aboutData', JSON.stringify(this.aboutData));
                    this.applyDataToPage();

                }
            }
        } catch (error) {
            // –¢–∏—Ö–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
            console.log('–ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –Ω–µ —É–¥–∞–ª–∞—Å—å:', error);
        }
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (–º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–∑–≤–∞–Ω –∏–∑–≤–Ω–µ)
    async forceUpdate() {
        console.log('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö About');
        await this.loadData();
        this.applyDataToPage();
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–∫—Ä—ã—Ç–∏—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π (–≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –≤—ã–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã)
    cleanup() {
        if (this.broadcastChannel) {
            this.broadcastChannel.close();
            console.log('üîå BroadcastChannel –∑–∞–∫—Ä—ã—Ç');
        }
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑—á–∏–∫ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
document.addEventListener('DOMContentLoaded', () => {
    window.aboutPageLoader = new AboutPageLoader();
});

// –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –ø—Ä–∏ –≤—ã–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
window.addEventListener('beforeunload', () => {
    if (window.aboutPageLoader) {
        window.aboutPageLoader.cleanup();
    }
});
