/**
 * –ü–ª–∞–≤–∞—é—â–∞—è –∫–∞—Ä—É—Å–µ–ª—å –∫–∞—Ç–µ–≥–æ—Ä–∏–π
 * –ü–æ—è–≤–ª—è–µ—Ç—Å—è –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ, —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç—Å—è —Å –º–µ–Ω—é
 */
class CategoryCarousel {
    constructor() {
        this.carousel = null;
        this.carouselItems = null;
        this.prevBtn = null;
        this.nextBtn = null;
        this.currentIndex = 0;
        this.itemWidth = 0;
        this.maxIndex = 0;
        this.categories = [];
        this.isVisible = false;
        this.scrollThreshold = 200; // –ü–∏–∫—Å–µ–ª–∏ –æ—Ç –≤–µ—Ä—Ö–∞ –¥–ª—è –ø–æ—è–≤–ª–µ–Ω–∏—è

        // Touch —Å–æ–±—ã—Ç–∏—è
        this.touchStartX = 0;
        this.touchCurrentX = 0;
        this.isDragging = false;

        console.log('üé† CategoryCarousel: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...');
        this.init();
    }

    init() {
        this.findElements();
        this.setupScrollListener();
        this.setupNavigation();
        this.setupTouchEvents();
        this.waitForMenuData();
    }

    findElements() {
        this.carousel = document.getElementById('category-carousel');
        this.carouselItems = document.getElementById('carousel-items');
        this.prevBtn = document.getElementById('carousel-prev');
        this.nextBtn = document.getElementById('carousel-next');

        if (!this.carousel || !this.carouselItems || !this.prevBtn || !this.nextBtn) {
            console.error('‚ùå CategoryCarousel: –ù–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã');
            return false;
        }
        return true;
    }

    setupScrollListener() {
        let ticking = false;

        window.addEventListener('scroll', () => {
            if (!ticking) {
                requestAnimationFrame(() => {
                    this.handleScroll();
                    ticking = false;
                });
                ticking = true;
            }
        });
    }

    handleScroll() {
        const scrollY = window.scrollY;
        const shouldShow = scrollY > this.scrollThreshold;

        if (shouldShow && !this.isVisible) {
            this.showCarousel();
        } else if (!shouldShow && this.isVisible) {
            this.hideCarousel();
        }

        // –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
        if (this.isVisible) {
            this.updateActiveCategory();
        }
    }

    showCarousel() {
        if (!this.carousel || this.categories.length === 0) return;

        this.isVisible = true;
        this.carousel.style.display = 'block';

        // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø–ª–∞–≤–Ω–æ–π –∞–Ω–∏–º–∞—Ü–∏–∏
        setTimeout(() => {
            this.carousel.classList.add('visible', 'animate-in');
        }, 10);

        console.log('üé† CategoryCarousel: –ö–∞—Ä—É—Å–µ–ª—å –ø–æ–∫–∞–∑–∞–Ω–∞');
    }

    hideCarousel() {
        if (!this.carousel) return;

        this.isVisible = false;
        this.carousel.classList.remove('visible', 'animate-in');

        // –°–∫—Ä—ã–≤–∞–µ–º –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
        setTimeout(() => {
            if (!this.isVisible) {
                this.carousel.style.display = 'none';
            }
        }, 400);

        console.log('üé† CategoryCarousel: –ö–∞—Ä—É—Å–µ–ª—å —Å–∫—Ä—ã—Ç–∞');
    }

    waitForMenuData() {
        // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –º–µ–Ω—é
        const checkMenuData = () => {
            if (window.menuCardsInstance && window.menuCardsInstance.menuData) {
                this.loadCategories(window.menuCardsInstance.menuData.categories);
            } else {
                setTimeout(checkMenuData, 100);
            }
        };
        checkMenuData();

        // –°–ª—É—à–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–µ–Ω—é
        document.addEventListener('menuDataUpdated', (event) => {
            if (event.detail && event.detail.categories) {
                this.loadCategories(event.detail.categories);
            }
        });
    }

    loadCategories(categories) {
        if (!categories || categories.length === 0) {
            console.log('üé† CategoryCarousel: –ù–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è');
            return;
        }

        this.categories = categories;
        this.renderCategories();
        this.updateNavigation();

        console.log(`üé† CategoryCarousel: –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${categories.length} –∫–∞—Ç–µ–≥–æ—Ä–∏–π`);
    }

    renderCategories() {
        if (!this.carouselItems) return;

        this.carouselItems.innerHTML = '';

        this.categories.forEach((category, index) => {
            const item = document.createElement('a');
            item.className = 'carousel-item';
            item.href = `#${category.id}`;
            item.textContent = category.name;
            item.dataset.categoryId = category.id;
            item.dataset.index = index;

            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
            item.addEventListener('click', (e) => {
                e.preventDefault();
                this.scrollToCategory(category.id);
                this.setActiveItem(index);
            });

            this.carouselItems.appendChild(item);
        });

        // –í—ã—á–∏—Å–ª—è–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∏–Ω–¥–µ–∫—Å –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        this.calculateMaxIndex();
    }

    calculateMaxIndex() {
        if (!this.carouselItems) return;

        const containerWidth = this.carouselItems.parentElement.clientWidth;
        const totalWidth = this.carouselItems.scrollWidth;

        this.maxIndex = Math.max(0, Math.ceil((totalWidth - containerWidth) / 120)); // 120px –ø—Ä–∏–º–µ—Ä–Ω–∞—è —à–∏—Ä–∏–Ω–∞ —ç–ª–µ–º–µ–Ω—Ç–∞
    }

    setupNavigation() {
        if (!this.prevBtn || !this.nextBtn) return;

        this.prevBtn.addEventListener('click', () => {
            this.currentIndex = Math.max(0, this.currentIndex - 1);
            this.updateCarouselPosition();
            this.updateNavigation();
        });

        this.nextBtn.addEventListener('click', () => {
            this.currentIndex = Math.min(this.maxIndex, this.currentIndex + 1);
            this.updateCarouselPosition();
            this.updateNavigation();
        });
    }

    updateCarouselPosition() {
        if (!this.carouselItems) return;

        const translateX = -(this.currentIndex * 120); // 120px –∑–∞ —à–∞–≥
        this.carouselItems.style.transform = `translateX(${translateX}px)`;
    }

    updateNavigation() {
        if (!this.prevBtn || !this.nextBtn) return;

        this.prevBtn.disabled = this.currentIndex === 0;
        this.nextBtn.disabled = this.currentIndex >= this.maxIndex;
    }

    scrollToCategory(categoryId) {
        const categoryElement = document.getElementById(categoryId);
        if (categoryElement) {
            const offsetTop = categoryElement.offsetTop - 80; // –£—á–∏—Ç—ã–≤–∞–µ–º –≤—ã—Å–æ—Ç—É –∫–∞—Ä—É—Å–µ–ª–∏

            window.scrollTo({
                top: offsetTop,
                behavior: 'smooth'
            });

            console.log(`üé† CategoryCarousel: –°–∫—Ä–æ–ª–ª –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${categoryId}`);
        }
    }

    updateActiveCategory() {
        if (!this.categories.length) return;

        const scrollY = window.scrollY + 100; // –°–º–µ—â–µ–Ω–∏–µ –¥–ª—è –ª—É—á—à–µ–≥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è
        let activeIndex = 0;

        // –ù–∞—Ö–æ–¥–∏–º –∞–∫—Ç–∏–≤–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–æ–∑–∏—Ü–∏–∏ —Å–∫—Ä–æ–ª–ª–∞
        for (let i = 0; i < this.categories.length; i++) {
            const categoryElement = document.getElementById(this.categories[i].id);
            if (categoryElement && categoryElement.offsetTop <= scrollY) {
                activeIndex = i;
            }
        }

        this.setActiveItem(activeIndex);
    }

    setupTouchEvents() {
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º touch-—Å–æ–±—ã—Ç–∏—è —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ —ç–ª–µ–º–µ–Ω—Ç—ã —Å–æ–∑–¥–∞–Ω—ã
        document.addEventListener('menuDataUpdated', () => {
            setTimeout(() => {
                this.addTouchListeners();
            }, 100);
        });
    }

    addTouchListeners() {
        if (!this.carouselItems) return;

        // Touch —Å–æ–±—ã—Ç–∏—è –¥–ª—è —Å–≤–∞–π–ø–∞
        this.carouselItems.addEventListener('touchstart', (e) => {
            this.touchStartX = e.touches[0].clientX;
            this.isDragging = true;
        }, { passive: true });

        this.carouselItems.addEventListener('touchmove', (e) => {
            if (!this.isDragging) return;
            this.touchCurrentX = e.touches[0].clientX;
        }, { passive: true });

        this.carouselItems.addEventListener('touchend', (e) => {
            if (!this.isDragging) return;
            this.isDragging = false;

            const touchDiff = this.touchStartX - this.touchCurrentX;
            const threshold = 50; // –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Å–≤–∞–π–ø–∞

            if (Math.abs(touchDiff) > threshold) {
                if (touchDiff > 0) {
                    // –°–≤–∞–π–ø –≤–ª–µ–≤–æ - —Å–ª–µ–¥—É—é—â–∏–π
                    this.currentIndex = Math.min(this.maxIndex, this.currentIndex + 1);
                } else {
                    // –°–≤–∞–π–ø –≤–ø—Ä–∞–≤–æ - –ø—Ä–µ–¥—ã–¥—É—â–∏–π
                    this.currentIndex = Math.max(0, this.currentIndex - 1);
                }
                this.updateCarouselPosition();
                this.updateNavigation();
            }
        }, { passive: true });

        // –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–æ–ª–µ—Å–∏–∫–∞ –º—ã—à–∏
        this.carouselItems.addEventListener('wheel', (e) => {
            e.preventDefault();

            if (e.deltaX > 0 || e.deltaY > 0) {
                // –°–∫—Ä–æ–ª–ª –≤–ø—Ä–∞–≤–æ/–≤–Ω–∏–∑
                this.currentIndex = Math.min(this.maxIndex, this.currentIndex + 1);
            } else {
                // –°–∫—Ä–æ–ª–ª –≤–ª–µ–≤–æ/–≤–≤–µ—Ä—Ö
                this.currentIndex = Math.max(0, this.currentIndex - 1);
            }

            this.updateCarouselPosition();
            this.updateNavigation();
        }, { passive: false });

        console.log('üëÜ CategoryCarousel: Touch-—Å–æ–±—ã—Ç–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
    }

    setActiveItem(index) {
        if (!this.carouselItems) return;

        // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —É –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        const items = this.carouselItems.querySelectorAll('.carousel-item');
        items.forEach(item => item.classList.remove('active'));

        // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å –∫ –Ω—É–∂–Ω–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É
        if (items[index]) {
            items[index].classList.add('active');
        }
    }

    // –ü—É–±–ª–∏—á–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
    updateCategories(categories) {
        this.loadCategories(categories);
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞—Ä—É—Å–µ–ª—å –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
    window.categoryCarouselInstance = new CategoryCarousel();
});

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
window.CategoryCarousel = CategoryCarousel;
